using System;

namespace Fami.Core
{
    public  static partial class Cpu6502InstructionSet
    {
        public static Cpu6502Execute[] OpCodes { get; set; }

        public static void InitCpu()
        {
            OpCodes = new Cpu6502Execute[256];

            for (var i = 0; i < 256; i++)
            {
                OpCodes[i] = GetInstructionExecute(i);
            }


        }

        private static Cpu6502Execute GetInstructionExecute(int i)
        {
            return i switch
            {
                0x00 => BRK,
                0x01 => ORA,
                0x02 => HLT,
                0x03 => SLO,
                0x04 => NOP,
                0x05 => ORA,
                0x06 => ASL_Mem,
                0x07 => SLO,
                0x08 => PHP,
                0x09 => ORA,
                0x0A => ASL,
                0x0B => NOP,
                0x0C => NOP,
                0x0D => ORA,
                0x0E => ASL_Mem,
                0x0F => SLO,
                0x10 => BPL,
                0x11 => ORA,
                0x12 => HLT,
                0x13 => SLO,
                0x14 => NOP,
                0x15 => ORA,
                0x16 => ASL_Mem,
                0x17 => SLO,
                0x18 => CLC,
                0x19 => ORA,
                0x1A => NOP,
                0x1B => SLO,
                0x1C => NOP,
                0x1D => ORA,
                0x1E => ASL_Mem,
                0x1F => SLO,
                0x20 => JSR,
                0x21 => AND,
                0x22 => HLT,
                0x23 => NOP,
                0x24 => BIT,
                0x25 => AND,
                0x26 => ROL_Mem,
                0x27 => NOP,
                0x28 => PLP,
                0x29 => AND,
                0x2A => ROL,
                0x2B => NOP,
                0x2C => BIT,
                0x2D => AND,
                0x2E => ROL_Mem,
                0x2F => NOP,
                0x30 => BMI,
                0x31 => AND,
                0x32 => HLT,
                0x33 => NOP,
                0x34 => NOP,
                0x35 => AND,
                0x36 => ROL_Mem,
                0x37 => NOP,
                0x38 => SEC,
                0x39 => AND,
                0x3A => NOP,
                0x3B => NOP,
                0x3C => NOP,
                0x3D => AND,
                0x3E => ROL_Mem,
                0x3F => NOP,
                0x40 => RTI,
                0x41 => EOR,
                0x42 => HLT,
                0x43 => SRE,
                0x44 => NOP,
                0x45 => EOR,
                0x46 => LSR_Mem,
                0x47 => SRE,
                0x48 => PHA,
                0x49 => EOR,
                0x4A => LSR,
                0x4B => NOP,
                0x4C => JMP,
                0x4D => EOR,
                0x4E => LSR_Mem,
                0x4F => SRE,
                0x50 => BVC,
                0x51 => EOR,
                0x52 => HLT,
                0x53 => SRE,
                0x54 => NOP,
                0x55 => EOR,
                0x56 => LSR_Mem,
                0x57 => SRE,
                0x58 => CLI,
                0x59 => EOR,
                0x5A => NOP,
                0x5B => SRE,
                0x5C => NOP,
                0x5D => EOR,
                0x5E => LSR_Mem,
                0x5F => SRE,
                0x60 => RTS,
                0x61 => ADC,
                0x62 => HLT,
                0x63 => NOP,
                0x64 => NOP,
                0x65 => ADC,
                0x66 => ROR_Mem,
                0x67 => NOP,
                0x68 => PLA,
                0x69 => ADC,
                0x6A => ROR,
                0x6B => NOP,
                0x6C => JMP,
                0x6D => ADC,
                0x6E => ROR_Mem,
                0x6F => NOP,
                0x70 => BVS,
                0x71 => ADC,
                0x72 => HLT,
                0x73 => NOP,
                0x74 => NOP,
                0x75 => ADC,
                0x76 => ROR_Mem,
                0x77 => NOP,
                0x78 => SEI,
                0x79 => ADC,
                0x7A => NOP,
                0x7B => NOP,
                0x7C => NOP,
                0x7D => ADC,
                0x7E => ROR_Mem,
                0x7F => NOP,
                0x80 => NOP,
                0x81 => STA,
                0x82 => NOP,
                0x83 => NOP,
                0x84 => STY,
                0x85 => STA,
                0x86 => STX,
                0x87 => NOP,
                0x88 => DEY,
                0x89 => NOP,
                0x8A => TXA,
                0x8B => NOP,
                0x8C => STY,
                0x8D => STA,
                0x8E => STX,
                0x8F => NOP,
                0x90 => BCC,
                0x91 => STA,
                0x92 => HLT,
                0x93 => NOP,
                0x94 => STY,
                0x95 => STA,
                0x96 => STX,
                0x97 => NOP,
                0x98 => TYA,
                0x99 => STA,
                0x9A => TXS,
                0x9B => TAS,
                0x9C => NOP,
                0x9D => STA,
                0x9E => NOP,
                0x9F => NOP,
                0xA0 => LDY,
                0xA1 => LDA,
                0xA2 => LDX,
                0xA3 => NOP,
                0xA4 => LDY,
                0xA5 => LDA,
                0xA6 => LDX,
                0xA7 => NOP,
                0xA8 => TAY,
                0xA9 => LDA,
                0xAA => TAX,
                0xAB => NOP,
                0xAC => LDY,
                0xAD => LDA,
                0xAE => LDX,
                0xAF => NOP,
                0xB0 => BCS,
                0xB1 => LDA,
                0xB2 => HLT,
                0xB3 => NOP,
                0xB4 => LDY,
                0xB5 => LDA,
                0xB6 => LDX,
                0xB7 => NOP,
                0xB8 => CLV,
                0xB9 => LDA,
                0xBA => TSX,
                0xBB => NOP,
                0xBC => LDY,
                0xBD => LDA,
                0xBE => LDX,
                0xBF => NOP,
                0xC0 => CPY,
                0xC1 => CMP,
                0xC2 => NOP,
                0xC3 => NOP,
                0xC4 => CPY,
                0xC5 => CMP,
                0xC6 => DEC,
                0xC7 => NOP,
                0xC8 => INY,
                0xC9 => CMP,
                0xCA => DEX,
                0xCB => NOP,
                0xCC => CPY,
                0xCD => CMP,
                0xCE => DEC,
                0xCF => NOP,
                0xD0 => BNE,
                0xD1 => CMP,
                0xD2 => HLT,
                0xD3 => NOP,
                0xD4 => NOP,
                0xD5 => CMP,
                0xD6 => DEC,
                0xD7 => NOP,
                0xD8 => CLD,
                0xD9 => CMP,
                0xDA => NOP,
                0xDB => NOP,
                0xDC => NOP,
                0xDD => CMP,
                0xDE => DEC,
                0xDF => NOP,
                0xE0 => CPX,
                0xE1 => SBC,
                0xE2 => NOP,
                0xE3 => NOP,
                0xE4 => CPX,
                0xE5 => SBC,
                0xE6 => INC,
                0xE7 => NOP,
                0xE8 => INX,
                0xE9 => SBC,
                0xEA => NOP,
                0xEB => USB,
                0xEC => CPX,
                0xED => SBC,
                0xEE => INC,
                0xEF => NOP,
                0xF0 => BEQ,
                0xF1 => SBC,
                0xF2 => HLT,
                0xF3 => NOP,
                0xF4 => NOP,
                0xF5 => SBC,
                0xF6 => INC,
                0xF7 => NOP,
                0xF8 => SED,
                0xF9 => SBC,
                0xFA => NOP,
                0xFB => NOP,
                0xFC => NOP,
                0xFD => SBC,
                0xFE => INC,
                0xFF => NOP,

                _ => throw new ArgumentOutOfRangeException()
            };
        }
    }
}